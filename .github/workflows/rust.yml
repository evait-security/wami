name: Rust CI and Release

on: 
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  release:

    needs: build

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Release_linux_x64
      run: cargo build --release --verbose
    
    - name: Copy release to destination
      run: cp ./target/release/wami ./assets/bin/linux_x64/wami
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v0.1.0
        release_name: Release v0.1.0
        body: This is the new release
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create.release.outputs.upload_url }}
        asset_path: ./assets/bin/linux_x64/wami
        asset_name: wami
        asset_content_type: application/octet-stream
    #- name: Move_wami
    #  run: cp target/release/wami assets/wami
    #- name: Upload wami
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: wami
    #    path: assets/wami
    #- name: Copy file to bin folder
    #  run: |
    #    placeholder=$(realpath target/release/wami)
    #    rm -Rf bin/linux_x64
    #    mkdir -p bin/linux_x64
    #    cp $placeholder bin/linux_x64
    #    chmod +x bin/linux_x64/wami
    #    ls -lah bin/linux_x64/wami
    #  env:
    #    ACCESS_TOKEN: ${{ secrets.rust.ci_readme_update }}
    #
    #- name: Commit and push changes
    #  run: |
    #    git config --global user.email "tb@evait.de"
    #    git config --global user.name "NxtTAB"
    #    git add bin/*
    #    git commit -m "add linux_x64 binary wami"
    #    git push
